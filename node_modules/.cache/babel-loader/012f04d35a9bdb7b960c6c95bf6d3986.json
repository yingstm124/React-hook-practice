{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Document/Mycos-trainee/5_Frontend/react-hook-and-unit-testing/src/components/TestEffect.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport ShowSum from \"./ShowSum\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TestEffect() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [showname, setShowname] = useState(false); // useEffect(() => {\n  //     if(count > 0){\n  //         console.log('effect Ja')\n  //     }\n  // }, [count])\n\n  useEffect(() => {\n    console.log('cal only first time !');\n    return () => {\n      console.log(\"destroy\");\n    };\n  }, []);\n\n  const callSum = test => {\n    return count * 5;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(c => c + 1),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), count, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(c => c - 1),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowname(() => !showname),\n      children: \"Toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), showname === true && \"Show name\", /*#__PURE__*/_jsxDEV(ShowSum, {\n      calSum: callSum,\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TestEffect, \"XepnVzcw2z3DcR9+We76isQf5e4=\");\n\n_c = TestEffect;\nexport default TestEffect;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestEffect\");","map":{"version":3,"sources":["/Users/macbook/Document/Mycos-trainee/5_Frontend/react-hook-and-unit-testing/src/components/TestEffect.tsx"],"names":["useEffect","useState","ShowSum","TestEffect","count","setCount","showname","setShowname","console","log","callSum","test","c"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,UAAT,GAAqB;AAAA;;AAEjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAS,CAAT,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAU,KAAV,CAAxC,CAHiB,CAMjB;AACA;AACA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEA,WAAO,MAAM;AACTD,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KAFD;AAGH,GANQ,EAMP,EANO,CAAT;;AASA,QAAMC,OAAO,GAAIC,IAAD,IAAU;AACtB,WAAOP,KAAK,GAAG,CAAf;AACH,GAFD;;AAIA,sBAEI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACO,CAAC,IAAIA,CAAC,GAAC,CAAR,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKR,KAFL,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACO,CAAC,IAAIA,CAAC,GAAC,CAAR,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI;AAAQ,MAAA,OAAO,EAAE,MAAML,WAAW,CAAC,MAAM,CAACD,QAAR,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,EAMKA,QAAQ,KAAK,IAAb,IACG,WAPR,eAUI,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEI,OAAjB;AAA0B,MAAA,KAAK,EAAEN;AAAjC;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAeH;;GAxCQD,U;;KAAAA,U;AA0CT,eAAeA,UAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport ShowSum from \"./ShowSum\";\n\nfunction TestEffect(){\n\n    const [count, setCount] = useState<number>(0);\n    const [showname, setShowname] = useState<boolean>(false);\n    \n\n    // useEffect(() => {\n    //     if(count > 0){\n    //         console.log('effect Ja')\n    //     }\n    // }, [count])\n\n    useEffect(() => {\n        console.log('cal only first time !')\n        \n        return () => {\n            console.log(\"destroy\")\n        }\n    },[])\n\n\n    const callSum = (test) => {\n        return count * 5\n    }\n\n    return(\n\n        <div>\n            <button onClick={() => setCount(c => c+1)}>+</button>\n            {count}\n            <button onClick={() => setCount(c => c-1)}>-</button>\n\n            <button onClick={() => setShowname(() => !showname)}>Toggle</button>\n            {showname === true &&\n                \"Show name\"\n            }\n\n            <ShowSum calSum={callSum} count={count}/>\n        </div>\n    )\n}\n\nexport default TestEffect\n\n"]},"metadata":{},"sourceType":"module"}