{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\n\nfunction randomWeather() {\n  return Math.floor(Math.random() * 90) - 10;\n}\n\nconst UseRealTimeWeather = () => {\n  _s();\n\n  const [weather, setWeather] = useState(25);\n  const loopRef = useRef(null);\n  useEffect(() => {\n    const getWeather = () => {\n      setWeather(randomWeather());\n    };\n\n    loopRef.current = setInterval(getWeather, 1500);\n    return () => {\n      if (loopRef.current) clearInterval(loopRef.current);\n    };\n  }, []);\n  return weather;\n};\n\n_s(UseRealTimeWeather, \"00Gi0Vi8Uk9ls1dGPlHsvm9YGhY=\");\n\n_c = UseRealTimeWeather;\nexport default UseRealTimeWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseRealTimeWeather\");","map":{"version":3,"sources":["/Users/macbook/Document/Mycos-trainee/5_Frontend/react-hook-and-unit-testing/src/hooks/UseRealTimeWeather.tsx"],"names":["useState","useEffect","useRef","randomWeather","Math","floor","random","UseRealTimeWeather","weather","setWeather","loopRef","getWeather","current","setInterval","clearInterval"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;;AAEC,SAASC,aAAT,GAA0B;AACvB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,EAAxC;AACH;;AAED,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACJ,QAAMU,OAAO,GAAGR,MAAM,CAAM,IAAN,CAAtB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEb,UAAMU,UAAU,GAAG,MAAM;AACxBF,MAAAA,UAAU,CAACN,aAAa,EAAd,CAAV;AACA,KAFD;;AAICO,IAAAA,OAAO,CAACE,OAAR,GAAkBC,WAAW,CAACF,UAAD,EAAa,IAAb,CAA7B;AAEA,WAAO,MAAM;AACZ,UAAID,OAAO,CAACE,OAAZ,EACEE,aAAa,CAACJ,OAAO,CAACE,OAAT,CAAb;AACH,KAHA;AAKH,GAbQ,EAaN,EAbM,CAAT;AAeI,SAAOJ,OAAP;AAEH,CArBD;;GAAMD,kB;;KAAAA,kB;AAsBN,eAAeA,kBAAf","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\n\u000bfunction randomWeather () {\n    return Math.floor(Math.random() * 90) - 10;\n}\n\nconst UseRealTimeWeather = () => {\n    const [weather, setWeather] = useState(25)\nconst loopRef = useRef<any>(null)\n\u000b\nuseEffect(() => {\n\n   const getWeather = () => {\n    setWeather(randomWeather())\n   }\n\n\u000b   loopRef.current = setInterval(getWeather, 1500)\n\u000b   \n    return () => {\n     if (loopRef.current)\n       clearInterval(loopRef.current)\n   }\n\n}, [])\n\n    return weather\n\n}\nexport default UseRealTimeWeather;\n"]},"metadata":{},"sourceType":"module"}