{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nfunction randomWeather() {\n  return Math.floor(Math.random() * 90) - 10;\n}\n\nconst useWeather = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [weather, setWeather] = useState(25);\n  const getWeather = useCallback(async () => {\n    setIsLoading(true);\n    await sleep(3000);\n    setWeather(randomWeather());\n    setIsLoading(false);\n  }, [setIsLoading, setWeather]);\n  return [weather, isLoading, getWeather];\n};\n\n_s(useWeather, \"oOj15F6Xmch3hjig8fykdsDQ0Gg=\");\n\nexport default useWeather;","map":{"version":3,"sources":["/Users/macbook/Document/Mycos-trainee/5_Frontend/react-hook-and-unit-testing/src/hooks/UseWeather.tsx"],"names":["useCallback","useState","sleep","ms","Promise","resolve","setTimeout","randomWeather","Math","floor","random","useWeather","isLoading","setIsLoading","weather","setWeather","getWeather"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;AAEA,SAASC,KAAT,CAAeC,EAAf,EAA2B;AACvB,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAAP;AACH;;AAED,SAASI,aAAT,GAAyB;AACrB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,EAAxC;AACH;;AAED,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMe,UAAU,GAAGhB,WAAW,CAAC,YAAY;AAEvCa,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMX,KAAK,CAAC,IAAD,CAAX;AAEAa,IAAAA,UAAU,CAACR,aAAa,EAAd,CAAV;AACAM,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH,GAR6B,EAQ3B,CAACA,YAAD,EAAeE,UAAf,CAR2B,CAA9B;AAUA,SAAO,CAACD,OAAD,EAAUF,SAAV,EAAqBI,UAArB,CAAP;AACH,CAhBD;;GAAML,U;;AAkBN,eAAeA,UAAf","sourcesContent":["import { useCallback, useState } from \"react\";\n\nfunction sleep(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nfunction randomWeather() {\n    return Math.floor(Math.random() * 90) - 10;\n}\n\nconst useWeather = () => {\n\n    const [isLoading, setIsLoading] = useState(false)\n    const [weather, setWeather] = useState(25)\n\n    const getWeather = useCallback(async () => {\n\n        setIsLoading(true)\n        await sleep(3000)\n\n        setWeather(randomWeather())\n        setIsLoading(false)\n        \n    }, [setIsLoading, setWeather])\n\n    return [weather, isLoading, getWeather] as const\n}\n\nexport default useWeather"]},"metadata":{},"sourceType":"module"}